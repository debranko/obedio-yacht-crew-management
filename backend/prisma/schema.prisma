generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   // "admin","chief-stewardess","stewardess","crew","eto"
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
}

model CrewMember {
  id         String   @id @default(cuid())
  name       String
  position   String
  department String
  status     String   @default("active") // "on-duty","off-duty","on-leave"
  contact    String?
  email      String?
  joinDate   DateTime?
  role       String?  // mirror with User.role if needed
  createdAt  DateTime @default(now())
}

model Location {
  id          String   @id @default(cuid())
  name        String   @unique
  type        String
  description String?
  createdAt   DateTime @default(now())
}

model Guest {
  id            String   @id @default(cuid())
  firstName     String
  lastName      String
  preferredName String?
  photo         String?
  type          String    @default("guest")      // align with UI enums if any
  status        String    @default("onboard")    // align with UI enums if any
  nationality   String?
  languages     String[]  @default([])
  passportNumber String?
  createdAt     DateTime  @default(now())
}

model ServiceRequest {
  id          String   @id @default(cuid())
  requestType String   @default("call")  // "call","service","emergency"
  guestId     String?
  locationId  String?
  cabinId     String?
  priority    String   @default("normal") // "normal","urgent","emergency"
  status      String   @default("open")   // "open","accepted","completed"
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  guest    Guest?    @relation(fields: [guestId], references: [id])
  location Location? @relation(fields: [locationId], references: [id])
}